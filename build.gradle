plugins {
	id 'distribution'
	id 'maven-publish'
	id 'maven'
	id 'signing'
	id 'com.github.node-gradle.node' version '2.2.4'
}

group = 'com.ossez'
archivesBaseName = "doc-resources"
description = 'OSSEZ 文档资源库'

node {
	version = '14.15.3'
	download = true
}

npm_run_build.dependsOn(npm_install)
distZip.dependsOn npm_run_build

artifacts {
	archives distZip
}

signing {
	sign configurations.archives
}

distributions {
	main {
		baseName = 'doc-resources'
		contents {
			from { "${buildDir}/dist" }
			into '/'
		}
	}
}


publishing {
	publications {
		maven(MavenPublication) {
			artifact distZip
		}
	}

	repositories {
		maven {
			url "https://maven.ossez.com/repository/internal/"
			credentials {
				username ""
				password ""
			}
		}
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			pom.project {
				name 'Example Application'
				packaging 'jar'
				// optionally artifactId can be defined here
				description 'A application used as an example on how to set up pushing  its components to the Central Repository.'
				url 'http://www.example.com/example-application'

				scm {
					connection 'scm:svn:http://foo.googlecode.com/svn/trunk/'
					developerConnection 'scm:svn:https://foo.googlecode.com/svn/trunk/'
					url 'http://foo.googlecode.com/svn/trunk/'
				}

				licenses {
					license {
						name 'The Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id 'manfred'
						name 'Manfred Moser'
						email 'manfred@sonatype.com'
					}
				}
			}
		}
	}
}